name: omnibox

services:
  web:
    image: ghcr.io/import-ai/omnibox-web:main
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - ${OB_WEB_PORT:-8080}:80
    restart: always
    depends_on:
      backend:
        condition: service_healthy

  backend:
    image: ghcr.io/import-ai/omnibox-backend:main
    restart: always
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      OBB_WIZARD_BASE_URL: "http://wizard:8000"

      OBB_DB_SYNC: ${OBB_DB_SYNC}
      OBB_DB_DATABASE: ${OBB_DB_DATABASE}

      OBB_JWT_SECRET: ${OBB_JWT_SECRET}
      OBB_JWT_EXPIRE: ${OBB_JWT_EXPIRE:-2678400s}

      OBB_MAIL_TRANSPORT: ${OBB_MAIL_TRANSPORT}
      OBB_MAIL_FROM: ${OBB_MAIL_FROM}

      OBB_MEILI_HOST: ${OBB_MEILI_HOST:-http://meilisearch:7700}
      OBB_MEILI_KEY: ${GLOBAL_MEILI_KEY}

      OBB_OPENAI_URL: ${OBB_OPENAI_BASE_URL}
      OBB_OPENAI_KEY: ${OBB_OPENAI_API_KEY}
      OBB_OPENAI_EMBEDDING_MODEL: ${OBB_OPENAI_EMBEDDING_MODEL}

      WECHAT_APP_ID: ${WECHAT_APP_ID}
      WECHAT_APP_SECRET: ${WECHAT_APP_SECRET}
      WECHAT_REDIRECT_URI: ${WECHAT_REDIRECT_URI}

      OPEN_WECHAT_APP_ID: ${OPEN_WECHAT_APP_ID}
      OPEN_WECHAT_APP_SECRET: ${OPEN_WECHAT_APP_SECRET}
      OPEN_WECHAT_REDIRECT_URI: ${OPEN_WECHAT_REDIRECT_URI}
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O-", "http://127.0.0.1:${OBB_PORT:-8000}/api/v1/health" ]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 5s
    depends_on:
      wizard:
        condition: service_healthy
      postgres:
        condition: service_healthy
      meilisearch:
        condition: service_healthy

  wizard:
    image: ghcr.io/import-ai/omnibox-wizard:main
    restart: always
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      ENV: "prod"
      OBW_VECTOR_HOST: ${OBW_MEILI_HOST:-http://meilisearch:7700}
      OBW_VECTOR_MEILI_API_KEY: ${GLOBAL_MEILI_KEY}
      OBW_BACKEND_BASE_URL: "http://backend:8000"

      OBW_VECTOR_EMBEDDING_API_KEY: ${OBW_VECTOR_EMBEDDING_API_KEY}
      OBW_VECTOR_EMBEDDING_BASE_URL: ${OBW_VECTOR_EMBEDDING_BASE_URL}
      OBW_VECTOR_EMBEDDING_MODEL: ${OBW_VECTOR_EMBEDDING_MODEL}

      OBW_GRIMOIRE_CUSTOM_TOOL_CALL: ${OBW_GRIMOIRE_CUSTOM_TOOL_CALL}
      OBW_GRIMOIRE_OPENAI_DEFAULT_API_KEY: ${OBW_GRIMOIRE_OPENAI_DEFAULT_API_KEY}
      OBW_GRIMOIRE_OPENAI_DEFAULT_BASE_URL: ${OBW_GRIMOIRE_OPENAI_DEFAULT_BASE_URL}
      OBW_GRIMOIRE_OPENAI_DEFAULT_MODEL: ${OBW_GRIMOIRE_OPENAI_DEFAULT_MODEL}
      OBW_GRIMOIRE_OPENAI_MINI_MODEL: ${OBW_GRIMOIRE_OPENAI_MINI_MODEL}
      OBW_GRIMOIRE_OPENAI_LARGE_MODEL: ${OBW_GRIMOIRE_OPENAI_LARGE_MODEL}

      OBW_TOOLS_SEARXNG_BASE_URL: ${OBW_TOOLS_SEARXNG_BASE_URL}
      OBW_TOOLS_SEARXNG_ENGINES: ${OBW_TOOLS_SEARXNG_ENGINES}

      OBW_TOOLS_RERANKER_OPENAI_API_KEY: ${OBW_TOOLS_RERANKER_OPENAI_API_KEY}
      OBW_TOOLS_RERANKER_OPENAI_MODEL: ${OBW_TOOLS_RERANKER_OPENAI_MODEL}
      OBW_TOOLS_RERANKER_OPENAI_BASE_URL: ${OBW_TOOLS_RERANKER_OPENAI_BASE_URL}
      OBW_TOOLS_RERANKER_THRESHOLD: ${OBW_TOOLS_RERANKER_THRESHOLD}
      OBW_TOOLS_RERANKER_K: ${OBW_TOOLS_RERANKER_K}
    healthcheck:
      test: ["CMD", "wget", "-q", "-O-", "http://127.0.0.1:8000/api/v1/health"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 5s
    depends_on:
      meilisearch:
        condition: service_healthy

  wizard-worker:
    image: ghcr.io/import-ai/omnibox-wizard:main
    restart: always
    environment:
      ENV: "prod"
      OBW_VECTOR_HOST: ${OBW_MEILI_HOST:-http://meilisearch:7700}
      OBW_VECTOR_MEILI_API_KEY: ${GLOBAL_MEILI_KEY}
      OBW_BACKEND_BASE_URL: "http://backend:8000"

      OBW_VECTOR_EMBEDDING_API_KEY: ${OBW_VECTOR_EMBEDDING_API_KEY}
      OBW_VECTOR_EMBEDDING_BASE_URL: ${OBW_VECTOR_EMBEDDING_BASE_URL}
      OBW_VECTOR_EMBEDDING_MODEL: ${OBW_VECTOR_EMBEDDING_MODEL}

      OBW_TASK_OFFICE_OPERATOR_BASE_URL: ${OBW_TASK_OFFICE_OPERATOR_BASE_URL}

      OBW_TASK_ASR_API_KEY: ${OBW_TASK_ASR_API_KEY}
      OBW_TASK_ASR_BASE_URL: ${OBW_TASK_ASR_BASE_URL}
      OBW_TASK_ASR_MODEL: ${OBW_TASK_ASR_MODEL}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    entrypoint: ["python", "main.py"]
    command: ["--workers", "1"]
    healthcheck:
      test: ["CMD-SHELL", "pgrep python"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 5s
    depends_on:
      meilisearch:
        condition: service_healthy
      backend:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    restart: always
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - ${PWD}/data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${OBB_DB_DATABASE:-omnibox}
      POSTGRES_USER: ${OBB_DB_USERNAME:-omnibox}
      POSTGRES_PASSWORD: ${OBB_DB_PASSWORD:-omnibox}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "omnibox", "-U", "omnibox"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 5s

  minio:
    image: quay.io/minio/minio:RELEASE.2025-04-22T22-12-26Z
    restart: always
    command: 'server /data --console-address ":9001"'
    environment:
      MINIO_ROOT_USER: username
      MINIO_ROOT_PASSWORD: password
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - '${PWD}/data/minio:/data'
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://127.0.0.1:9000/minio/health/live" ]
      interval: 5s
      timeout: 3s
      retries: 5

  meilisearch:
    image: getmeili/meilisearch:v1.14
    restart: always
    environment:
      MEILI_MASTER_KEY: ${GLOBAL_MEILI_KEY}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - '${PWD}/data/meili_data:/meili_data'
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://127.0.0.1:7700/health" ]
      interval: 5s
      timeout: 3s
      retries: 5
